What happens when you initialize a repository? Why do you need to do it?

you only initialize the repo without any updated and commit
one new path is created but is hidden [.git] 


logs:

cleber@ninja-asus ~/Desktop/Udacity/Github/Version-Control/reflections $ git init 
Reinitialized existing Git repository in /home/cleber/Desktop/Udacity/Github/Version-Control/reflections/.git/
cleber@ninja-asus ~/Desktop/Udacity/Github/Version-Control/reflections $ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	lesson_1_reflections.txt
	lesson_2_reflections.txt


How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?